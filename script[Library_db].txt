DROP DATABASE IF EXISTS Library_db;
CREATE DATABASE Library_db;
DROP USER IF EXISTS 'library_user'@'localhost';
CREATE USER 'library_user'@'localhost' IDENTIFIED BY '1234';
GRANT ALL ON Library_db.* TO 'library_user'@'localhost';

USE Library_db;
DROP TABLE IF EXISTS usufruisce;
DROP TABLE IF EXISTS noleggia;
DROP TABLE IF EXISTS acquista;
DROP TABLE IF EXISTS libro;
DROP TABLE IF EXISTS cliente;
DROP TABLE IF EXISTS enciclopedia;
DROP TABLE IF EXISTS telefono;
DROP TABLE IF EXISTS impiegato;

CREATE TABLE cliente
(
CF CHAR(16) NOT NULL,
nome VARCHAR(30) NOT NULL,
cognome VARCHAR(30) NOT NULL,
PRIMARY KEY(CF)
);

CREATE TABLE enciclopedia
(
codiceE INT NOT NULL,
argomento VARCHAR(50),
PRIMARY KEY(codiceE)
);

CREATE TABLE impiegato
(
codiceI INT NOT NULL,
nome VARCHAR(30) NOT NULL,
cognome VARCHAR(30) NOT NULL,
indirizzo VARCHAR(60) DEFAULT 'non indicato',
PRIMARY KEY(codiceI)
);

CREATE TABLE libro
(
SSN INT NOT NULL,
nome VARCHAR(60) NOT NULL,
scrittore VARCHAR(30),
categoria VARCHAR(20),
tipo ENUM('testo storico','testo da lettura') default 'testo da lettura',
CF_cliente CHAR(16) NOT NULL,
cod_impiegato INT NOT NULL,
PRIMARY KEY (SSN)
);

CREATE TABLE telefono
(
numero CHAR(10) NOT NULL,
cod_impiegato INT NOT NULL,
PRIMARY KEY (numero),
FOREIGN KEY (cod_impiegato) REFERENCES impiegato(codiceI)
);

CREATE TABLE usufruisce
(
data_uso DATE NOT NULL,
cliente_cf CHAR(16) NOT NULL,
enc_cod INT NOT NULL,
PRIMARY KEY (cliente_cf, enc_cod),
FOREIGN KEY (cliente_cf) REFERENCES cliente(CF),
FOREIGN KEY (enc_cod) REFERENCES enciclopedia(codiceE)
);

CREATE TABLE noleggia
(
data_noleggio DATE NOT NULL,
cliente_cf CHAR(16) NOT NULL,
lib_S INT NOT NULL,
id INT AUTO_INCREMENT,
PRIMARY KEY(id),
FOREIGN KEY (cliente_cf) REFERENCES cliente(CF),
FOREIGN KEY (lib_S) REFERENCES libro(SSN)
);

CREATE TABLE acquista
(
data_acquisto DATE NOT NULL,
imp_cod INT NOT NULL,
lib_S INT NOT NULL,
PRIMARY KEY(imp_cod, lib_S),
FOREIGN KEY (imp_cod) REFERENCES impiegato(codiceI),
FOREIGN KEY (lib_S) REFERENCES libro(SSN)
);